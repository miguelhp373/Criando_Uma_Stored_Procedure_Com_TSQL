DROP	PROCEDURE	TABLE_TESTE_SP_MNT
GO	
CREATE	PROCEDURE	TABLE_TESTE_SP_MNT
(
--PARAMETROS DE ENTRADA
@INP_STATUS		VARCHAR(003)	,

@INP_CODIGO		INTEGER		,
@INP_DESCRICAO		VARCHAR(255)	,
@INP_DATA_REGISTRO	DATETIME	,

--PARAMETROS DE SAIDA
@OUT_CODIGO		INTEGER		OUTPUT,
@OUT_DESCRICAO		VARCHAR(255)	OUTPUT,
@OUT_DATA_REGISTRO	VARCHAR(010)	OUTPUT,

--PARAMETRO DE SAIDA PARA ERROS
@OUT_COD_ERRO		INTEGER		OUTPUT,
@OUT_DESC_ERRO		VARCHAR(255)	OUTPUT
)
WITH
ENCRYPTION
AS
DECLARE
--VARIAVEIS AUXILIARES
@V_AUX		INTEGER		=	0,
@V_AUX_2	INTEGER		=	0

	IF	@INP_STATUS	=	'CON'	GOTO	CONSULTA
	IF	@INP_STATUS	=	'MNT'	GOTO	MANUTENCAO
	IF	@INP_STATUS	=	'EXC'	GOTO	EXCLUSAO
						GOTO	FINALIZA

------------------------------------------------
CONSULTA:
------------------------------------------------
	
	--REALIZA A CONSULTA 
	SELECT	@OUT_CODIGO		=	CODIGO		,	
		@OUT_DESCRICAO		=	DESCRICAO	,
		@OUT_DATA_REGISTRO	=	CONVERT(VARCHAR,DATA_REGISTRO,103)
	FROM	TABLE_TESTE WITH(NOLOCK)
	WHERE	CODIGO			=	@INP_CODIGO

	--MOSTRA OS REGISTROS UTILIZANDO UM PRINT, POIS NÃO TEMOS UMA INTERFACE GRÁFICA
	PRINT('CODIGO - '		+	@OUT_CODIGO		)
	PRINT('DESCRIÇÃO - '		+	@OUT_DESCRICAO		)
	PRINT('DATA DE REGISTRO - '	+	@OUT_DATA_REGISTRO	)

	GOTO	FINALIZA

------------------------------------------------
MANUTENCAO:
------------------------------------------------

	-- VERIFICA SE O REGISTRO EXISTE
	SET	@V_AUX	=	0
	SELECT	@V_AUX	=	1
	FROM	TABLE_TESTE WITH(NOLOCK)
	WHERE	CODIGO	=	@INP_CODIGO

	-- DEFINE O QUE IRÁ FAZER DE ACORDO COM A VALIDAÇÃO ACIMA
	IF	@V_AUX	>	0	GOTO	ALTERACAO
	IF	@V_AUX	=	0	GOTO	INCLUSAO
					GOTO	FINALIZA

------------------------------------------------
INCLUSAO:
------------------------------------------------
	
	----------------------------------
	--GERA O ID NOVO PARA A TABELA
	-- SELECIONA O ULTIMO REGISTRO E SOMA MAIS 1
	SELECT	TOP 1
		@V_AUX_2	=	ISNULL(CODIGO,0)
	FROM	TABLE_TESTE WITH(NOLOCK)
	ORDER BY CODIGO DESC

	SET	@V_AUX_2	=	@V_AUX_2	  +	1
	----------------------------------
	

	--INSERE UM NOVO REGISTRO
	INSERT	INTO	TABLE_TESTE
	(
	CODIGO			,	
	DESCRICAO		,	
	DATA_REGISTRO	
	)
	VALUES
	(
	@V_AUX_2		,
	@INP_DESCRICAO		,
	@INP_DATA_REGISTRO
	)
	
	GOTO	FINALIZA

------------------------------------------------
ALTERACAO:
------------------------------------------------
	
	-- ATUALIZA OS DADOS
	UPDATE	TABLE_TESTE	SET
		DESCRICAO	=	@INP_DESCRICAO		,	
		DATA_REGISTRO	=	@INP_DATA_REGISTRO
	WHERE	CODIGO		=	@INP_CODIGO	
	
	GOTO	FINALIZA


------------------------------------------------
EXCLUSAO:
------------------------------------------------

	-- VERIFICA SE O REGISTRO EXISTE
	SET	@V_AUX	=	0
	SELECT	@V_AUX	=	1
	FROM	TABLE_TESTE WITH(NOLOCK)
	WHERE	CODIGO	=	@INP_CODIGO

	-- DELETA O REGISTRO SE EXISTIR
	IF	@V_AUX	>	0
	BEGIN
		DELETE	
		FROM	TABLE_TESTE
		WHERE	CODIGO		=	@INP_CODIGO
	END

	-- SE O REGISTRO NAO EXISTIR ELE GERA UMA MENSAGEM DE ERRO
	IF	@V_AUX	=	0
	BEGIN
		SELECT	@OUT_COD_ERRO	=	1	,
			@OUT_DESC_ERRO	=	'ERRO AO EXCLUIR REGISTRO ' + CONVERT(VARCHAR,@INP_CODIGO) + ' , O REGISTRO ESCOLHIDO NÃO EXISTE!' 
		
		GOTO	MOSTRA_MENSAGEM_DE_ERRO
	END


	
	GOTO	FINALIZA

------------------------------------------------
MOSTRA_MENSAGEM_DE_ERRO:
------------------------------------------------
	
	--DEMONSTRA A MENSAGEM DE ERRO
	IF	@OUT_COD_ERRO	>	0	
	BEGIN
		PRINT(CONVERT(VARCHAR,@OUT_COD_ERRO) + ' - ' + @OUT_DESC_ERRO)
	END

	GOTO	FINALIZA

------------------------------------------------
FINALIZA:
------------------------------------------------
RETURN